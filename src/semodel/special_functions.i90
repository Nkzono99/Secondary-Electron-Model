# 1 "/LARGE0/gr20001/b36291/Github/Secondary-Electron-Model/src/semodel/special_functions.f90"
module m_special_functions
    use, intrinsic:: ieee_arithmetic, only: ieee_value, ieee_positive_inf, ieee_negative_inf, ieee_quiet_nan
    use iso_fortran_env, only: dp => real64
    implicit none

    private
    public erfinv

contains
    elemental function erfinv(x) result(res)
        real(dp), intent(in) :: x
        real(dp) :: a, t, res, p, q

        a = abs(x)
        if (a >= 1.0_dp) then
            if (x == 1.0_dp) then
                res = ieee_value(1._dp, ieee_positive_inf)
            else if (x == -1.0_dp) then
                res = ieee_value(1._dp, ieee_negative_inf)
            else
! domain error
                res = ieee_value(1._dp, ieee_quiet_nan)
            end if
        else if (a <= 0.75_dp) then ! Table 17 in Blair et al.
            t = x*x - 0.5625_dp
            p = ((((((0.1760587821390590_dp*t + (-0.864213011587247794e1_dp))*t + (0.6545466284794487048e2_dp))*t + &
                    (-0.16900142734642382420e3_dp))*t + (0.18644914861620987391e3_dp))*t + (-0.90784959262960326650e2_dp))*t + &
                 (0.160304955844066229311e2_dp))
            q = ((((((0.1e1_dp*t + (-0.206010730328265443e2_dp))*t + &
                     (0.10760453916055123830e3_dp))*t + (-0.22210254121855132366e3_dp))*t + &
                   (0.21015790486205317714e3_dp))*t + (-0.91374167024260313936e2_dp))*t + (0.147806470715138316110e2_dp))
            res = x*p/q
        else if (a <= 0.9375_dp) then ! Table 37 in Blair et al.
            t = x*x - 0.87890625_dp
            p = (((((((0.237516689024448_dp*t + (-0.5478927619598318769e1_dp))*t + (0.19121334396580330163e2_dp))*t + &
                     (-0.22655292823101104193e2_dp))*t + (0.11763505705217827302e2_dp))*t + (-0.29344398672542478687e1_dp))*t + &
                  (0.3444556924136125216_dp))*t + (-0.152389263440726128e-1_dp))
            q = (((((((0.1e1_dp*t + (-0.10014376349783070835e2_dp))*t + &
                      (0.24640158943917284883e2_dp))*t + (-0.23716715521596581025e2_dp))*t &
                    + (0.10695129973387014469e2_dp))*t + (-0.24068318104393757995e1_dp))*t + (0.2610628885843078511_dp))*t + &
                 (-0.108465169602059954e-1_dp))
            res = x*p/q
        else ! Table 58 in Blair et al.
            t = 1.0_dp/sqrt(-log(1.0_dp - a))
            p = ((((((((((0.22419563223346345828e-2_dp*t + &
                          (-0.177910045751117599791e-1_dp))*t + (0.668168077118049895750e-1_dp))*t + &
                 (0.72718806231556811306121_dp))*t + (0.207897426301749172289354e1_dp))*t + (0.262556728794480727266643e1_dp))*t + &
               (0.283026779017544899742694e1_dp))*t + (0.1042615854929826612283637e1_dp))*t + (0.129695500997273524030254_dp))*t + &
                  (0.5350414748789301376564e-2_dp))*t + (0.56451977709864482298e-4_dp))
            q = ((((((((0.1e1_dp*t + (0.203724318174121779298258e1_dp))*t + (0.387828582770420112635182e1_dp))*t + &
              (0.376311685364050289010232e1_dp))*t + (0.303793311735222062372456e1_dp))*t + (0.105429322326264911952443e1_dp))*t + &
                   (0.129866154169116469345513_dp))*t + (0.5350558706793065395335e-2_dp))*t + (0.56451699862760651514e-4_dp))
            res = p/(sign(t, x)*q)
        end if
    end function

end module
